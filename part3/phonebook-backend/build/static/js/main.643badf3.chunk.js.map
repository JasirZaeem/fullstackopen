{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","personService","getAll","axios","get","then","data","create","newObject","post","update","id","put","remove","delete","PersonForm","handleAddContact","newName","newNumber","setNewName","setNewNumber","onSubmit","value","onChange","event","target","type","Person","person","name","number","removePerson","onClick","Filter","query","setQuery","persons","map","toLowerCase","includes","Persons","Toast","toast","className","message","App","useState","setPersons","toasts","setToasts","toastId","setToastId","useEffect","createToast","time","newId","console","log","setTimeout","prevToasts","filter","window","confirm","visible","preventDefault","some","find","updatedPerson","catch","error","newPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.643badf3.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl).then(({ data }) => data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then(({ data }) => data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then(({ data }) => data);\r\n};\r\n\r\nconst remove = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`);\r\n};\r\n\r\nconst personService = { getAll, create, update, remove };\r\n\r\nexport default personService;\r\n","import React, { useState, useEffect } from \"react\";\nimport personService from \"./services/persons\";\nimport \"./index.css\";\n\nconst PersonForm = ({\n  handleAddContact,\n  newName,\n  newNumber,\n  setNewName,\n  setNewNumber,\n}) => {\n  return (\n    <form onSubmit={handleAddContact}>\n      <div>\n        name:{\" \"}\n        <input\n          value={newName}\n          onChange={(event) => setNewName(event.target.value)}\n        />\n        <br />\n        number:{\" \"}\n        <input\n          type={\"tel\"}\n          value={newNumber}\n          onChange={(event) => setNewNumber(event.target.value)}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nconst Person = ({ person: { id, name, number }, removePerson }) => {\n  return (\n    <p>\n      {name} {number}\n      <button\n        onClick={() => {\n          removePerson(id, name);\n        }}\n      >\n        delete\n      </button>\n    </p>\n  );\n};\n\nconst Filter = ({ query, setQuery, persons, removePerson }) => {\n  return (\n    <div>\n      filter shown with:{\" \"}\n      <input value={query} onChange={(event) => setQuery(event.target.value)} />\n      {query ? (\n        <div>\n          {persons.map((person) =>\n            person.name.toLowerCase().includes(query.toLowerCase()) ? (\n              <Person\n                key={person.id}\n                person={person}\n                removePerson={removePerson}\n              />\n            ) : null\n          )}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nconst Persons = ({ persons, removePerson }) => {\n  return (\n    <div>\n      {persons.map((person) => (\n        <Person key={person.id} person={person} removePerson={removePerson} />\n      ))}\n    </div>\n  );\n};\n\nconst Toast = ({ toast }) => {\n  return <div className={`toast ${toast.type}`}>{toast.message}</div>;\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [toasts, setToasts] = useState([]);\n  const [toastId, setToastId] = useState(0);\n\n  const getPersons = () => {\n    personService.getAll().then((data) => setPersons(data));\n  };\n\n  useEffect(getPersons, []);\n\n  const createToast = (toast, time) => {\n    const newId = toastId + 1;\n    setToastId(newId);\n    console.log(newId);\n    setToasts([...toasts, { ...toast, id: newId }]);\n    setTimeout(() => {\n      setToasts((prevToasts) =>\n        prevToasts.filter((toast) => toast.id !== newId)\n      );\n    }, time);\n  };\n\n  const handleAddContact = (event) => {\n    event.preventDefault();\n\n    if (\n      persons.some(({ name }) => name.toLowerCase() === newName.toLowerCase())\n    ) {\n      const shouldReplaceNumber = window.confirm(\n        `${newName} is already added to phonebook, replace the old number with a new one?`\n      );\n      if (shouldReplaceNumber) {\n        const { id } = persons.find(\n          ({ name }) => name.toLowerCase() === newName.toLowerCase()\n        );\n        personService\n          .update(id, { id, name: newName, number: newNumber })\n          .then((updatedPerson) => {\n            setPersons(\n              persons.map((person) =>\n                person.id !== updatedPerson.id ? person : updatedPerson\n              )\n            );\n            createToast(\n              {\n                visible: true,\n                message: `Updated '${updatedPerson.name}'`,\n                type: \"success\",\n              },\n              5000\n            );\n            setNewNumber(\"\");\n            setNewName(\"\");\n          })\n          .catch((error) => {\n            setPersons(persons.filter((value) => value.id !== id));\n            createToast(\n              {\n                visible: true,\n                message: `'${newName}' has already been deleted`,\n                type: \"danger\",\n              },\n              5000\n            );\n          });\n      }\n      return;\n    }\n\n    const newPerson = { name: newName, number: newNumber };\n\n    personService.create(newPerson).then((data) => {\n      setPersons([...persons, data]);\n      createToast(\n        {\n          visible: true,\n          message: `Added '${data.name}'`,\n          type: \"success\",\n        },\n        5000\n      );\n      setNewName(\"\");\n      setNewNumber(\"\");\n    });\n  };\n\n  const removePerson = (id, name) => {\n    const shouldDeletePerson = window.confirm(`Delete ${name}`);\n    if (shouldDeletePerson) {\n      personService.remove(id).then(() => {\n        setPersons(persons.filter((person) => person.id !== id));\n        createToast(\n          {\n            visible: true,\n            message: `Removed '${name}'`,\n            type: \"danger\",\n          },\n          5000\n        );\n      });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      {toasts.map((toast) => (\n        <Toast key={toast.id} toast={toast} />\n      ))}\n\n      <Filter\n        query={query}\n        setQuery={setQuery}\n        persons={persons}\n        removePerson={removePerson}\n      />\n\n      <h2>add a new</h2>\n\n      <PersonForm\n        handleAddContact={handleAddContact}\n        newName={newName}\n        newNumber={newNumber}\n        setNewName={setNewName}\n        setNewNumber={setNewNumber}\n      />\n\n      <h2>Numbers</h2>\n\n      <Persons persons={persons} removePerson={removePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from \"./App\";\n\n\nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}