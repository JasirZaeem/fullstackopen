{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","defaults","validateStatus","status","personService","getAll","get","then","data","create","newObject","post","update","id","put","remove","delete","PersonForm","handleAddContact","newName","newNumber","setNewName","setNewNumber","onSubmit","value","onChange","event","target","type","Person","person","name","number","removePerson","onClick","Filter","query","setQuery","persons","map","toLowerCase","includes","Persons","Toast","toast","className","message","App","useState","setPersons","toasts","setToasts","toastId","setToastId","useEffect","createToast","time","newId","setTimeout","prevToasts","filter","window","confirm","visible","preventDefault","some","find","updatedPerson","catch","error","response","newPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f5170747.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/persons\";\r\n\r\naxios.defaults.validateStatus = (status) => {\r\n  return status >= 200 && status < 300;\r\n};\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl).then(({ data }) => data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then(({ data }) => data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then(({ data }) => data);\r\n};\r\n\r\nconst remove = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`);\r\n};\r\n\r\nconst personService = { getAll, create, update, remove };\r\n\r\nexport default personService;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport personService from \"./services/persons\";\r\nimport \"./index.css\";\r\n\r\nconst PersonForm = ({\r\n  handleAddContact,\r\n  newName,\r\n  newNumber,\r\n  setNewName,\r\n  setNewNumber,\r\n}) => {\r\n  return (\r\n    <form onSubmit={handleAddContact}>\r\n      <div>\r\n        name:{\" \"}\r\n        <input\r\n          value={newName}\r\n          onChange={(event) => setNewName(event.target.value)}\r\n        />\r\n        <br />\r\n        number:{\" \"}\r\n        <input\r\n          type={\"tel\"}\r\n          value={newNumber}\r\n          onChange={(event) => setNewNumber(event.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst Person = ({ person: { id, name, number }, removePerson }) => {\r\n  return (\r\n    <p>\r\n      {name} {number}\r\n      <button\r\n        onClick={() => {\r\n          removePerson(id, name);\r\n        }}\r\n      >\r\n        delete\r\n      </button>\r\n    </p>\r\n  );\r\n};\r\n\r\nconst Filter = ({ query, setQuery, persons, removePerson }) => {\r\n  return (\r\n    <div>\r\n      filter shown with:{\" \"}\r\n      <input value={query} onChange={(event) => setQuery(event.target.value)} />\r\n      {query ? (\r\n        <div>\r\n          {persons.map((person) =>\r\n            person.name.toLowerCase().includes(query.toLowerCase()) ? (\r\n              <Person\r\n                key={person.id}\r\n                person={person}\r\n                removePerson={removePerson}\r\n              />\r\n            ) : null\r\n          )}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Persons = ({ persons, removePerson }) => {\r\n  return (\r\n    <div>\r\n      {persons.map((person) => (\r\n        <Person key={person.id} person={person} removePerson={removePerson} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Toast = ({ toast }) => {\r\n  return <div className={`toast ${toast.type}`}>{toast.message}</div>;\r\n};\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [query, setQuery] = useState(\"\");\r\n  const [toasts, setToasts] = useState([]);\r\n  const [toastId, setToastId] = useState(0);\r\n\r\n  const getPersons = () => {\r\n    personService.getAll().then((data) => setPersons(data));\r\n  };\r\n\r\n  useEffect(getPersons, []);\r\n\r\n  const createToast = (toast, time) => {\r\n    const newId = toastId + 1;\r\n    setToastId(newId);\r\n    setToasts([...toasts, { ...toast, id: newId }]);\r\n    setTimeout(() => {\r\n      setToasts((prevToasts) =>\r\n        prevToasts.filter((toast) => toast.id !== newId)\r\n      );\r\n    }, time);\r\n  };\r\n\r\n  const handleAddContact = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (\r\n      persons.some(({ name }) => name.toLowerCase() === newName.toLowerCase())\r\n    ) {\r\n      const shouldReplaceNumber = window.confirm(\r\n        `${newName} is already added to phonebook, replace the old number with a new one?`\r\n      );\r\n      if (shouldReplaceNumber) {\r\n        const { id } = persons.find(\r\n          ({ name }) => name.toLowerCase() === newName.toLowerCase()\r\n        );\r\n        personService\r\n          .update(id, { id, name: newName, number: newNumber })\r\n          .then((updatedPerson) => {\r\n            setPersons(\r\n              persons.map((person) =>\r\n                person.id !== updatedPerson.id ? person : updatedPerson\r\n              )\r\n            );\r\n            createToast(\r\n              {\r\n                visible: true,\r\n                message: `Updated '${updatedPerson.name}'`,\r\n                type: \"success\",\r\n              },\r\n              5000\r\n            );\r\n            setNewNumber(\"\");\r\n            setNewName(\"\");\r\n          })\r\n          .catch((error) => {\r\n            if (error.response.status === 404) {\r\n              setPersons(persons.filter((value) => value.id !== id));\r\n            }\r\n            createToast(\r\n              {\r\n                visible: true,\r\n                message: error.response.data.error,\r\n                type: \"danger\",\r\n              },\r\n              5000\r\n            );\r\n          });\r\n      }\r\n      return;\r\n    }\r\n\r\n    const newPerson = { name: newName, number: newNumber };\r\n\r\n    personService.create(newPerson).then((data) => {\r\n      setPersons([...persons, data]);\r\n      createToast(\r\n        {\r\n          visible: true,\r\n          message: `Added '${data.name}'`,\r\n          type: \"success\",\r\n        },\r\n        5000\r\n      );\r\n      setNewName(\"\");\r\n      setNewNumber(\"\");\r\n    })\r\n    .catch((error) => {\r\n      createToast(\r\n        {\r\n          visible: true,\r\n          message: error.response.data.error,\r\n          type: \"danger\",\r\n        },\r\n        5000\r\n      );\r\n    });\r\n  };\r\n\r\n  const removePerson = (id, name) => {\r\n    const shouldDeletePerson = window.confirm(`Delete ${name}`);\r\n    if (shouldDeletePerson) {\r\n      personService.remove(id).then(() => {\r\n        setPersons(persons.filter((person) => person.id !== id));\r\n        createToast(\r\n          {\r\n            visible: true,\r\n            message: `Removed '${name}'`,\r\n            type: \"danger\",\r\n          },\r\n          5000\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n\r\n      {toasts.map((toast) => (\r\n        <Toast key={toast.id} toast={toast} />\r\n      ))}\r\n\r\n      <Filter\r\n        query={query}\r\n        setQuery={setQuery}\r\n        persons={persons}\r\n        removePerson={removePerson}\r\n      />\r\n\r\n      <h2>add a new</h2>\r\n\r\n      <PersonForm\r\n        handleAddContact={handleAddContact}\r\n        newName={newName}\r\n        newNumber={newNumber}\r\n        setNewName={setNewName}\r\n        setNewNumber={setNewNumber}\r\n      />\r\n\r\n      <h2>Numbers</h2>\r\n\r\n      <Persons persons={persons} removePerson={removePerson} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from \"./App\";\n\n\nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}